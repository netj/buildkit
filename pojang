#!/bin/sh -e
# pojang -- build an executable by packing given files and dirs
# Home: http://netj.org/2008/03/pojang
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2008-03-13
# 
# Usage:
#   pojang EXECUTABLE BASEDIR ENTRY [-TAROPTION] PATH...
# 
#   EXECUTABLE is the path to the executable to be created.
#   BASEDIR is where the following relative PATHs are based on.
#   ENTRY is the path to the command that will receive all the arguments of the
#     pojang'ed executable.
#   PATH is the path to files and directories that will be included in the
#     executable.  ENTRY must be included among them, or you will get a broken
#     executable.
# 
# Example:
#   # Suppose you have a nice `tool' consisting of multiple files.
#   # And, you use it through its `bin/shell', for example:
#   /path/to/tool/bin/shell command1 arg1 arg2 ...
# 
#   # But, it becomes a bit clumsy when you want to carry it around.
#   # This is where `pojang' plays its role.  Make the tool handy by:
#   pojang ~/tool /path/to/tool bin/shell bin/cmd-* lib/*.sh share/*.txt ...
# 
#   # Now, move/copy/share your favorite tool as you do with your files.
#   cp tool mytool-in-a-file
#   ./mytool-in-a-file
#   mv mytool-in-a-file .Trash/
#   scp tool somehost:bin/

# show usage
if [ $# -lt 4 ]; then
    sed -ne '/^# Usage:/,/^$/ s/^# //p' <"$0"
    exit 1
fi

Product=$1; shift
BaseDir=$1; shift

# check entry
Entry=$1; shift
if ! [ -f "$BaseDir/$Entry" -a -x "$BaseDir/$Entry" ]; then
    echo "$BaseDir/$Entry is not an executable entry" >&2
    exit 2
fi

# how to calculate its signature
packageId() {
    if type sha1sum >/dev/null 2>&1; then
        (
            cd "$BaseDir"
            find "$@" ! -type d | xargs sha1sum
            ls -lR "$@"
        ) | sha1sum | sed 's/ .*$//'
    else
        date +%s.%N
    fi
}

# begin with the pojang driver
: ${PACKAGENAME:=`basename "$PWD"`}
: ${PACKAGEID:=`packageId "$@"`}
drvlen=`sed -ne '/<<DRV$/,/^DRV/p' <"$0" | wc -l | tr -d " "`
{
cat <<DRV
#!/bin/sh -e
# an executable packed with pojang -- http://netj.org/2008/03/pojang
bundle=/tmp/pojang-\$USER/$PACKAGENAME/$PACKAGEID
if ! [ -e \$bundle.ok ]; then
    mkdir -p \$bundle
    tail -n +$drvlen "\$0" | gzip -d | (cd \$bundle; tar xpf -)
    touch \$bundle.ok
fi
exec \$bundle/$Entry "\$@"
DRV
echo "# end of pojang driver, package content follows"

# and the tar archive follows
(
cd "$BaseDir"
tar cf - --format=posix "$@"
) | gzip
} >"$Product"
chmod +x "$Product"

# TODO save $0 as POJANG_ORIGINAL_COMMAND
