#!/usr/bin/env bash
set -eu
shopt -s extglob

mkdir -p .build
cd .build

# compile a runtime dependency checker
mkdir -p runtime
rsync -rlH ../runtime/ --exclude=*.{commands,paths,test.sh,sh,txt} runtime/ --delete
generate-depends-checker ../runtime "Missing dependency: " "3X " >runtime/.check
chmod +x runtime/.check

# prepare dependencies to be bundled
bundledir=bundled
prepdir=bundled.prep
prepdirpath="$(pwd -P)"/"$prepdir"
rm -rf "$bundledir"
mkdir -p "$bundledir" "$prepdir"/.all
rsync -rlH ../bundled/ --exclude=/*.{commands,paths,{{test,bundle}.,}sh} "$prepdir"/ #--delete
without-comments ../bundle.conf |
while read -r dep; do
    echo "# Preparing to bundle dependency $dep"
    prepared="$prepdir/$dep"
    relsymlink ../bundled/"$dep".sh "$prepared".sh
    # reuse prepared dependency if available
    if [ -L ../bundled/"$dep".sh ]; then
        # find out where the prep script comes from
        origin="$(dirname "$(readlink ../bundled/"$dep".sh)")/$dep"
        if [ -e "$origin" ]; then
            # make sure it's clear to place a symlink
            ! [ -e "$prepared" ] || rm -rf "$prepared"
            # point to the originally prepared dependency directory
            relsymlink "$origin" "$prepared"
        fi
    fi
    # remove any dangling symlinks that may remain because of the above reuse
    if [ -L "$prepared" -a ! -e "$prepared" ]; then
        rm -f "$prepared"
    fi
    {
        echo '
        prepared="$DEPENDSDIR/'"$dep"'"
        [ -d "$prepared" -a "$prepared"/.prepared -nt "$prepared".sh ]
        '
    } >"$prepared".test.sh
    chmod +x "$prepared".test.sh
done
generate-depends-checker "$prepdir" "# Building to bundle, " "# Building to bundle, " |
tee check-depends.sh |
DEPENDSDIR="$prepdirpath" \
DEPENDS_PREFIX="$prepdirpath/.all" \
    bash -eu

# then, bundle only the necessary files from each dependency
without-comments ../bundle.conf |
while read -r dep; do
    bundle=../bundled/"$dep".bundle.sh
    if [ -x "$bundle" ]; then
        echo "# Using custom bundling rule for dependency $dep"
        "$bundle" "$prepdir/$dep"/ "$bundledir/$dep"/
    else
        echo "# Bundling everything prepared under prefix for dependency $dep"
        rsync -aH "$prepdir/$dep"/prefix "$bundledir/$dep"/ --delete
    fi
done

# and the ones to be exposed
rsync -aH "$prepdir"/.all "$bundledir"/ --delete

