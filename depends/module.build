#!/usr/bin/env bash
set -eu
shopt -s extglob

dependsdir=$PWD

mkdir -p .build
cd .build

# compile a runtime dependency checker
mkdir -p "$dependsdir"/runtime runtime
rsync -rlH "$dependsdir"/runtime/ --exclude=*.{commands,paths,test.sh,sh,txt} runtime/ --delete
generate-depends-checker "$dependsdir"/runtime "Missing dependency: " "$PACKAGENAME " >runtime/.check
chmod +x runtime/.check

# prepare dependencies to be bundled
bundledir=bundled
prepdir=bundled.prep
prepdirpath="$(pwd -P)"/"$prepdir"
mkdir -p "$dependsdir"/bundled "$bundledir" "$prepdir"/.all
# analyze a signature of each dependency's recipe
without-comments "$dependsdir"/bundle.conf |
while read -r dep; do
    # use git-hash-object(1) to build a signature of the recipe for bundling the dependency
    mkdir -p "$prepdir"/"$dep"
    find -L "$dependsdir"/bundled/"$dep" -type f | git hash-object --stdin-paths |
    git hash-object --stdin >"$prepdir"/"$dep"/signature
done
# prepare the scripts
rsync -rlH "$dependsdir"/bundled/ --exclude=/*/{commands,paths,{test,bundle,install}.sh} "$prepdir"/ --copy-unsafe-links #--delete
without-comments "$dependsdir"/bundle.conf |
while read -r dep; do
    prepared="$prepdir/$dep"
    rm -f "$prepared"/{test,install}.sh
    signature=$(cat "$prepared"/signature)
    {
        echo '
        prepared="$DEPENDSDIR/'"$dep"'"
        [ -d "$prepared" -a x"$(cat "$prepared"/.prepared)" = x"'"$signature"'" ]
        '
    } >"$prepared"/test.sh
    chmod +x "$prepared"/test.sh
    {
        sh-escape echo "# Building dependency $dep ($signature)"
        # first, use the install script for building the dependency
        cat "$dependsdir"/bundled/"$dep"/install.sh
        # then, add how to bundle only the necessary files from what's built
        pathFromPrepToBundle="$(relpath "$prepdir/$dep" "$bundledir/$dep")/"
        bundle="$dependsdir"/bundled/"$dep"/bundle.sh
        if [ -x "$bundle" ]; then
            sh-escape echo "# Using custom bundling rule for dependency $dep"
            ln -sfn "$bundle" .
            sh-escape ./bundle.sh ./ "$pathFromPrepToBundle"/
        else
            sh-escape echo "# Bundling everything prepared under prefix for dependency $dep"
            sh-escape rsync -aH ./prefix "$pathFromPrepToBundle"/ --delete
        fi
        echo "echo $signature >.prepared"
    } >"$prepared"/install.sh
done
generate-depends-checker "$prepdir" "# Bundled dependencies: " "# Bundled dependencies: " |
tee check-depends.sh |
DEPENDSDIR="$prepdirpath" \
DEPENDS_PREFIX="$prepdirpath/.all" \
    bash -eu

# bundle the ones to be exposed
rsync -aH "$prepdir"/.all "$bundledir"/ --delete

