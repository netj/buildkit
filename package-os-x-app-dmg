#!/usr/bin/env bash
# package-os-x-app-dmg -- Generate a .dmg given an OS X App and template .dmg
# usage: package-os-x-app-dmg APP DMGTEMPLATE OUTPUTDMG
# 
# This tool will package the given APP and the files under DMGTEMPLATE with a
# symlink to /Applications folder into a compressed disk image OUTPUTDMG.  The
# name of the APP will be used as the volume name of the OUTPUTDMG.
#
# See: http://digital-sushi.org/entry/how-to-create-a-disk-image-installer-for-apple-mac-os-x/
set -e

[ $# -eq 3 ] || { sed -n '2,/^#$/ s/^# //p' <"$0"; exit 1; }
App=$1; shift
DiskImageTemplate=$1; shift
DiskImageTemplate=$(cd "$DiskImageTemplate" && pwd -P)
OutputDiskImage=$1; shift

outputSparseImage=${OutputDiskImage%.dmg}.sparsebundle
appName=$(basename "$App" .app)

# create sparsebundle
hdiutil create \
    -size $((10 + $(du -sm "$App" | cut -f1)))m \
    -type SPARSEBUNDLE -fs HFS+ -volname "$appName" -ov \
    "${outputSparseImage%.sparsebundle}"
mountpt=$(hdiutil attach "$outputSparseImage" | tail -1 | cut -f3)

# inject into app
mkdir -p "$mountpt"/"$appName".app
ditto "$App" "$mountpt"/"$appName".app
ln -sfn /Applications "$mountpt"/
(
cd "$mountpt"
{
    echo "@@dot@@=."
    echo "@@APPNAME@@=$appName"
} | customize "$DiskImageTemplate"
)
hdiutil eject "$mountpt"

# convert into a compressed image
rm -f "$OutputDiskImage"
hdiutil convert "$outputSparseImage" -format UDBZ -o "$OutputDiskImage"
rm -rf "$outputSparseImage"
